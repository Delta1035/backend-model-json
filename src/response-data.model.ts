


// Generated by https://quicktype.io

export interface APIResponse {
    projectName: string;
    projectDescription: string;
    createAt: Date;
    url: string;
    errorCodes: { [key: string]: string; };
    domainMap: { [key: string]: DomainMap; };
    apiGroups: APIGroup[];
}

export interface APIGroup {
    description: string;
    path: string;
    apis: API[];
}

export interface API {
    description: string;
    path: string;
    requestMethod: RequestMethod;
    params: Param[];
    requestBody?: RequestBody;
    responseBody: ResponseBody;
}

export interface Param {
    name: Name;
    required: boolean;
    defaultValue: string;
    schema: ResponseBody;
}

export enum Name {
    Code = "code",
    EnumName = "enumName",
    FetchDetachedFiled = "fetchDetachedFiled",
    FileName = "fileName",
    ID = "id",
    IDS = "ids",
    IsAnon = "isAnon",
    LastUpdateTimestamp = "lastUpdateTimestamp",
    ModelInstanceID = "modelInstanceId",
    ModelName = "modelName",
    OwnerID = "ownerId",
    ProjectCode = "projectCode",
    RemoteQuery = "remoteQuery",
    SortDesc = "sortDesc",
    SortField = "sortField",
    Sorts = "sorts",
    UserNumber = "userNumber",
}

export interface ResponseBody {
    category: Category;
    typeName: TypeName;
    typeNames: TypeName[];
    example?: boolean | ExampleExample | number;
    domainClass?: ResponseBodyDomainClass;
    nestedSchema?: ResponseBody;
}

export enum Category {
    Domain = "DOMAIN",
    List = "LIST",
    OrdinaryType = "ORDINARY_TYPE",
}

export enum ResponseBodyDomainClass {
    COMPolarjCasCasGroup = "com.polarj.cas.CasGroup",
    COMPolarjCasCasLoginDevice = "com.polarj.cas.CasLoginDevice",
    COMPolarjCasCasLoginUser = "com.polarj.cas.CasLoginUser",
    COMPolarjCasCasResource = "com.polarj.cas.CasResource",
    COMPolarjCasCasRole = "com.polarj.cas.CasRole",
    COMPolarjCasCasUser = "com.polarj.cas.CasUser",
    COMPolarjCasCasUserAuthorize = "com.polarj.cas.CasUserAuthorize",
    COMPolarjCasChangePassword = "com.polarj.cas.ChangePassword",
    COMPolarjCasModelCasAuthenticate = "com.polarj.cas.model.CasAuthenticate",
    COMPolarjCasModelCasFilterFields = "com.polarj.cas.model.CasFilterFields",
    COMPolarjCasModelCasUser = "com.polarj.cas.model.CasUser",
    COMPolarjCasRetrievePassword = "com.polarj.cas.RetrievePassword",
    COMPolarjCommonModelGroupResult = "com.polarj.common.model.GroupResult",
    COMPolarjCommonModelServerResponse = "com.polarj.common.model.ServerResponse",
    COMPolarjDddcgsDomainInfo = "com.polarj.dddcgs.DomainInfo",
    COMPolarjDddcgsFieldInfo = "com.polarj.dddcgs.FieldInfo",
    COMPolarjDddcgsModelInfo = "com.polarj.dddcgs.ModelInfo",
    COMPolarjDddcgsProjectInfo = "com.polarj.dddcgs.ProjectInfo",
    COMPolarjModelAttachment = "com.polarj.model.Attachment",
    COMPolarjModelFieldFrontendSpecification = "com.polarj.model.FieldFrontendSpecification",
    COMPolarjModelModelFrontendSpecification = "com.polarj.model.ModelFrontendSpecification",
    COMPolarjModelScheduler = "com.polarj.model.Scheduler",
    COMPolarjModelSelectionData = "com.polarj.model.SelectionData",
    JavaUtilList = "java.util.List",
    LjavaLangString = "[Ljava.lang.String;",
}

export enum ExampleExample {
    ExampleString = "ExampleString",
}

export enum TypeName {
    Attachment = "Attachment",
    Boolean = "Boolean",
    CasAuthenticate = "CasAuthenticate",
    CasFilterFields = "CasFilterFields",
    CasGroup = "CasGroup",
    CasLoginDevice = "CasLoginDevice",
    CasLoginUser = "CasLoginUser",
    CasResource = "CasResource",
    CasRole = "CasRole",
    CasUser = "CasUser",
    CasUserAuthorize = "CasUserAuthorize",
    ChangePassword = "ChangePassword",
    ClientRequest = "ClientRequest",
    DomainInfo = "DomainInfo",
    FieldFrontendSpecification = "FieldFrontendSpecification",
    FieldInfo = "FieldInfo",
    GroupResult = "GroupResult",
    Integer = "Integer",
    List = "List",
    Long = "Long",
    ModelFrontendSpecification = "ModelFrontendSpecification",
    ModelInfo = "ModelInfo",
    ProjectInfo = "ProjectInfo",
    RetrievePassword = "RetrievePassword",
    Scheduler = "Scheduler",
    SelectionData = "SelectionData",
    ServerResponse = "ServerResponse",
    String = "String",
    TypeNameBoolean = "boolean",
    TypeNameString = "String[]",
    Void = "void",
}

export interface RequestBody {
    category: Category;
    typeName: TypeName;
    typeNames: TypeName[];
    domainClass: RequestBodyDomainClass;
    nestedSchema: NestedSchema;
}

export enum RequestBodyDomainClass {
    COMPolarjCommonModelClientRequest = "com.polarj.common.model.ClientRequest",
}

export interface NestedSchema {
    category: Category;
    typeName: TypeName;
    typeNames: TypeName[];
    domainClass?: ResponseBodyDomainClass;
    example?: ExampleExample | number;
    nestedSchema?: ResponseBody;
}

export enum RequestMethod {
    Delete = "DELETE",
    Get = "GET",
    Post = "POST",
}

export interface DomainMap {
    domainName: string;
    isDomain: boolean;
    fields: Field[];
}

export interface Field {
    name: string;
    description: string;
    defaultValue?: CustomPattern;
    editable: boolean;
    hidden?: boolean;
    example: ExampleElement[];
    exportable: boolean;
    importable: boolean;
    nullable: boolean;
    unique: boolean;
    minLength: number;
    maxLength: number;
    minValue: number;
    maxValue: number;
    patternType: PatternType;
    customPattern: CustomPattern;
    enums: string[];
    rawClass: string;
    category: Category;
    nestedConcreteClass?: string;
}

export enum CustomPattern {
    AZAZ09_AZAZ09AZAZ2$ = "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
    D1032 = "\\d{10,32}",
    Empty = "",
    Undefined = "undefined",
}

export enum ExampleElement {
    Bar = "bar",
    Foo = "foo",
}

export enum PatternType {
    None = "NONE",
}
